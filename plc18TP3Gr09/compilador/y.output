Grammar

    0 $accept: Prog $end

    1 Prog: Prog If
    2     | Prog While
    3     | Prog Atrib ';'
    4     | Prog VAR '=' Expr ';'
    5     | Prog Func ';'
    6     | %empty

    7 Func: VAR Expr

    8 Atrib: TYPE VAR
    9      | Equal

   10 Equal: TYPE VAR '='
   11      | Equal Expr

   12 If: IF Cond
   13   | IF '{' Prog '}' ELSE
   14   | IF '{' Prog '}'

   15 While: WHILE
   16      | WHILE Cond
   17      | WHILE '{' Prog '}'

   18 Cond: NUMI
   19     | '(' Expr EQUALS Expr ')'
   20     | '(' Expr NE Expr ')'
   21     | '(' Expr '<' Expr ')'
   22     | '(' Expr '>' Expr ')'
   23     | '(' Expr LE Expr ')'
   24     | '(' Expr GE Expr ')'
   25     | '(' Cond AND Cond ')'
   26     | '(' Cond OR Cond ')'
   27     | '!' Cond

   28 Expr: '(' Expr '+' Expr ')'
   29     | '(' Expr '-' Expr ')'
   30     | '(' Expr '*' Expr ')'
   31     | '(' Expr '/' Expr ')'
   32     | '(' Expr '%' Expr ')'
   33     | '(' Expr ')'
   34     | Exp

   35 Exp: NUMI
   36    | NUMF
   37    | STR
   38    | Func


Terminals, with rules where they appear

$end (0) 0
'!' (33) 27
'%' (37) 32
'(' (40) 19 20 21 22 23 24 25 26 28 29 30 31 32 33
')' (41) 19 20 21 22 23 24 25 26 28 29 30 31 32 33
'*' (42) 30
'+' (43) 28
'-' (45) 29
'/' (47) 31
';' (59) 3 4 5
'<' (60) 21
'=' (61) 4 10
'>' (62) 22
'{' (123) 13 14 17
'}' (125) 13 14 17
error (256)
LE (258) 23
GE (259) 24
EQUALS (260) 19
NE (261) 20
OR (262) 26
AND (263) 25
IF (264) 12 13 14
ELSE (265) 13
WHILE (266) 15 16 17
STR (267) 37
VAR (268) 4 7 8 10
NUMI (269) 18 35
NUMF (270) 36
TYPE (271) 8 10


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
Prog (32)
    on left: 1 2 3 4 5 6, on right: 0 1 2 3 4 5 13 14 17
Func (33)
    on left: 7, on right: 5 38
Atrib (34)
    on left: 8 9, on right: 3
Equal (35)
    on left: 10 11, on right: 9 11
If (36)
    on left: 12 13 14, on right: 1
While (37)
    on left: 15 16 17, on right: 2
Cond (38)
    on left: 18 19 20 21 22 23 24 25 26 27, on right: 12 16 25 26 27
Expr (39)
    on left: 28 29 30 31 32 33 34, on right: 4 7 11 19 20 21 22 23
    24 28 29 30 31 32 33
Exp (40)
    on left: 35 36 37 38, on right: 34


State 0

    0 $accept: . Prog $end

    $default  reduce using rule 6 (Prog)

    Prog  go to state 1


State 1

    0 $accept: Prog . $end
    1 Prog: Prog . If
    2     | Prog . While
    3     | Prog . Atrib ';'
    4     | Prog . VAR '=' Expr ';'
    5     | Prog . Func ';'

    $end   shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    VAR    shift, and go to state 5
    TYPE   shift, and go to state 6

    Func   go to state 7
    Atrib  go to state 8
    Equal  go to state 9
    If     go to state 10
    While  go to state 11


State 2

    0 $accept: Prog $end .

    $default  accept


State 3

   12 If: IF . Cond
   13   | IF . '{' Prog '}' ELSE
   14   | IF . '{' Prog '}'

    NUMI  shift, and go to state 12
    '{'   shift, and go to state 13
    '('   shift, and go to state 14
    '!'   shift, and go to state 15

    Cond  go to state 16


State 4

   15 While: WHILE .
   16      | WHILE . Cond
   17      | WHILE . '{' Prog '}'

    NUMI  shift, and go to state 12
    '{'   shift, and go to state 17
    '('   shift, and go to state 14
    '!'   shift, and go to state 15

    $default  reduce using rule 15 (While)

    Cond  go to state 18


State 5

    4 Prog: Prog VAR . '=' Expr ';'
    7 Func: VAR . Expr

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '='   shift, and go to state 23
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 26
    Exp   go to state 27


State 6

    8 Atrib: TYPE . VAR
   10 Equal: TYPE . VAR '='

    VAR  shift, and go to state 28


State 7

    5 Prog: Prog Func . ';'

    ';'  shift, and go to state 29


State 8

    3 Prog: Prog Atrib . ';'

    ';'  shift, and go to state 30


State 9

    9 Atrib: Equal .
   11 Equal: Equal . Expr

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    $default  reduce using rule 9 (Atrib)

    Func  go to state 25
    Expr  go to state 31
    Exp   go to state 27


State 10

    1 Prog: Prog If .

    $default  reduce using rule 1 (Prog)


State 11

    2 Prog: Prog While .

    $default  reduce using rule 2 (Prog)


State 12

   18 Cond: NUMI .

    $default  reduce using rule 18 (Cond)


State 13

   13 If: IF '{' . Prog '}' ELSE
   14   | IF '{' . Prog '}'

    $default  reduce using rule 6 (Prog)

    Prog  go to state 32


State 14

   19 Cond: '(' . Expr EQUALS Expr ')'
   20     | '(' . Expr NE Expr ')'
   21     | '(' . Expr '<' Expr ')'
   22     | '(' . Expr '>' Expr ')'
   23     | '(' . Expr LE Expr ')'
   24     | '(' . Expr GE Expr ')'
   25     | '(' . Cond AND Cond ')'
   26     | '(' . Cond OR Cond ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 33
    NUMF  shift, and go to state 22
    '('   shift, and go to state 34
    '!'   shift, and go to state 15

    Func  go to state 25
    Cond  go to state 35
    Expr  go to state 36
    Exp   go to state 27


State 15

   27 Cond: '!' . Cond

    NUMI  shift, and go to state 12
    '('   shift, and go to state 14
    '!'   shift, and go to state 15

    Cond  go to state 37


State 16

   12 If: IF Cond .

    $default  reduce using rule 12 (If)


State 17

   17 While: WHILE '{' . Prog '}'

    $default  reduce using rule 6 (Prog)

    Prog  go to state 38


State 18

   16 While: WHILE Cond .

    $default  reduce using rule 16 (While)


State 19

   37 Exp: STR .

    $default  reduce using rule 37 (Exp)


State 20

    7 Func: VAR . Expr

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 26
    Exp   go to state 27


State 21

   35 Exp: NUMI .

    $default  reduce using rule 35 (Exp)


State 22

   36 Exp: NUMF .

    $default  reduce using rule 36 (Exp)


State 23

    4 Prog: Prog VAR '=' . Expr ';'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 39
    Exp   go to state 27


State 24

   28 Expr: '(' . Expr '+' Expr ')'
   29     | '(' . Expr '-' Expr ')'
   30     | '(' . Expr '*' Expr ')'
   31     | '(' . Expr '/' Expr ')'
   32     | '(' . Expr '%' Expr ')'
   33     | '(' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 40
    Exp   go to state 27


State 25

   38 Exp: Func .

    $default  reduce using rule 38 (Exp)


State 26

    7 Func: VAR Expr .

    $default  reduce using rule 7 (Func)


State 27

   34 Expr: Exp .

    $default  reduce using rule 34 (Expr)


State 28

    8 Atrib: TYPE VAR .
   10 Equal: TYPE VAR . '='

    '='  shift, and go to state 41

    $default  reduce using rule 8 (Atrib)


State 29

    5 Prog: Prog Func ';' .

    $default  reduce using rule 5 (Prog)


State 30

    3 Prog: Prog Atrib ';' .

    $default  reduce using rule 3 (Prog)


State 31

   11 Equal: Equal Expr .

    $default  reduce using rule 11 (Equal)


State 32

    1 Prog: Prog . If
    2     | Prog . While
    3     | Prog . Atrib ';'
    4     | Prog . VAR '=' Expr ';'
    5     | Prog . Func ';'
   13 If: IF '{' Prog . '}' ELSE
   14   | IF '{' Prog . '}'

    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    VAR    shift, and go to state 5
    TYPE   shift, and go to state 6
    '}'    shift, and go to state 42

    Func   go to state 7
    Atrib  go to state 8
    Equal  go to state 9
    If     go to state 10
    While  go to state 11


State 33

   18 Cond: NUMI .
   35 Exp: NUMI .

    OR        reduce using rule 18 (Cond)
    AND       reduce using rule 18 (Cond)
    $default  reduce using rule 35 (Exp)


State 34

   19 Cond: '(' . Expr EQUALS Expr ')'
   20     | '(' . Expr NE Expr ')'
   21     | '(' . Expr '<' Expr ')'
   22     | '(' . Expr '>' Expr ')'
   23     | '(' . Expr LE Expr ')'
   24     | '(' . Expr GE Expr ')'
   25     | '(' . Cond AND Cond ')'
   26     | '(' . Cond OR Cond ')'
   28 Expr: '(' . Expr '+' Expr ')'
   29     | '(' . Expr '-' Expr ')'
   30     | '(' . Expr '*' Expr ')'
   31     | '(' . Expr '/' Expr ')'
   32     | '(' . Expr '%' Expr ')'
   33     | '(' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 33
    NUMF  shift, and go to state 22
    '('   shift, and go to state 34
    '!'   shift, and go to state 15

    Func  go to state 25
    Cond  go to state 35
    Expr  go to state 43
    Exp   go to state 27


State 35

   25 Cond: '(' Cond . AND Cond ')'
   26     | '(' Cond . OR Cond ')'

    OR   shift, and go to state 44
    AND  shift, and go to state 45


State 36

   19 Cond: '(' Expr . EQUALS Expr ')'
   20     | '(' Expr . NE Expr ')'
   21     | '(' Expr . '<' Expr ')'
   22     | '(' Expr . '>' Expr ')'
   23     | '(' Expr . LE Expr ')'
   24     | '(' Expr . GE Expr ')'

    LE      shift, and go to state 46
    GE      shift, and go to state 47
    EQUALS  shift, and go to state 48
    NE      shift, and go to state 49
    '<'     shift, and go to state 50
    '>'     shift, and go to state 51


State 37

   27 Cond: '!' Cond .

    $default  reduce using rule 27 (Cond)


State 38

    1 Prog: Prog . If
    2     | Prog . While
    3     | Prog . Atrib ';'
    4     | Prog . VAR '=' Expr ';'
    5     | Prog . Func ';'
   17 While: WHILE '{' Prog . '}'

    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    VAR    shift, and go to state 5
    TYPE   shift, and go to state 6
    '}'    shift, and go to state 52

    Func   go to state 7
    Atrib  go to state 8
    Equal  go to state 9
    If     go to state 10
    While  go to state 11


State 39

    4 Prog: Prog VAR '=' Expr . ';'

    ';'  shift, and go to state 53


State 40

   28 Expr: '(' Expr . '+' Expr ')'
   29     | '(' Expr . '-' Expr ')'
   30     | '(' Expr . '*' Expr ')'
   31     | '(' Expr . '/' Expr ')'
   32     | '(' Expr . '%' Expr ')'
   33     | '(' Expr . ')'

    ')'  shift, and go to state 54
    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '*'  shift, and go to state 57
    '/'  shift, and go to state 58
    '%'  shift, and go to state 59


State 41

   10 Equal: TYPE VAR '=' .

    $default  reduce using rule 10 (Equal)


State 42

   13 If: IF '{' Prog '}' . ELSE
   14   | IF '{' Prog '}' .

    ELSE  shift, and go to state 60

    $default  reduce using rule 14 (If)


State 43

   19 Cond: '(' Expr . EQUALS Expr ')'
   20     | '(' Expr . NE Expr ')'
   21     | '(' Expr . '<' Expr ')'
   22     | '(' Expr . '>' Expr ')'
   23     | '(' Expr . LE Expr ')'
   24     | '(' Expr . GE Expr ')'
   28 Expr: '(' Expr . '+' Expr ')'
   29     | '(' Expr . '-' Expr ')'
   30     | '(' Expr . '*' Expr ')'
   31     | '(' Expr . '/' Expr ')'
   32     | '(' Expr . '%' Expr ')'
   33     | '(' Expr . ')'

    LE      shift, and go to state 46
    GE      shift, and go to state 47
    EQUALS  shift, and go to state 48
    NE      shift, and go to state 49
    ')'     shift, and go to state 54
    '<'     shift, and go to state 50
    '>'     shift, and go to state 51
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59


State 44

   26 Cond: '(' Cond OR . Cond ')'

    NUMI  shift, and go to state 12
    '('   shift, and go to state 14
    '!'   shift, and go to state 15

    Cond  go to state 61


State 45

   25 Cond: '(' Cond AND . Cond ')'

    NUMI  shift, and go to state 12
    '('   shift, and go to state 14
    '!'   shift, and go to state 15

    Cond  go to state 62


State 46

   23 Cond: '(' Expr LE . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 63
    Exp   go to state 27


State 47

   24 Cond: '(' Expr GE . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 64
    Exp   go to state 27


State 48

   19 Cond: '(' Expr EQUALS . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 65
    Exp   go to state 27


State 49

   20 Cond: '(' Expr NE . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 66
    Exp   go to state 27


State 50

   21 Cond: '(' Expr '<' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 67
    Exp   go to state 27


State 51

   22 Cond: '(' Expr '>' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 68
    Exp   go to state 27


State 52

   17 While: WHILE '{' Prog '}' .

    $default  reduce using rule 17 (While)


State 53

    4 Prog: Prog VAR '=' Expr ';' .

    $default  reduce using rule 4 (Prog)


State 54

   33 Expr: '(' Expr ')' .

    $default  reduce using rule 33 (Expr)


State 55

   28 Expr: '(' Expr '+' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 69
    Exp   go to state 27


State 56

   29 Expr: '(' Expr '-' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 70
    Exp   go to state 27


State 57

   30 Expr: '(' Expr '*' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 71
    Exp   go to state 27


State 58

   31 Expr: '(' Expr '/' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 72
    Exp   go to state 27


State 59

   32 Expr: '(' Expr '%' . Expr ')'

    STR   shift, and go to state 19
    VAR   shift, and go to state 20
    NUMI  shift, and go to state 21
    NUMF  shift, and go to state 22
    '('   shift, and go to state 24

    Func  go to state 25
    Expr  go to state 73
    Exp   go to state 27


State 60

   13 If: IF '{' Prog '}' ELSE .

    $default  reduce using rule 13 (If)


State 61

   26 Cond: '(' Cond OR Cond . ')'

    ')'  shift, and go to state 74


State 62

   25 Cond: '(' Cond AND Cond . ')'

    ')'  shift, and go to state 75


State 63

   23 Cond: '(' Expr LE Expr . ')'

    ')'  shift, and go to state 76


State 64

   24 Cond: '(' Expr GE Expr . ')'

    ')'  shift, and go to state 77


State 65

   19 Cond: '(' Expr EQUALS Expr . ')'

    ')'  shift, and go to state 78


State 66

   20 Cond: '(' Expr NE Expr . ')'

    ')'  shift, and go to state 79


State 67

   21 Cond: '(' Expr '<' Expr . ')'

    ')'  shift, and go to state 80


State 68

   22 Cond: '(' Expr '>' Expr . ')'

    ')'  shift, and go to state 81


State 69

   28 Expr: '(' Expr '+' Expr . ')'

    ')'  shift, and go to state 82


State 70

   29 Expr: '(' Expr '-' Expr . ')'

    ')'  shift, and go to state 83


State 71

   30 Expr: '(' Expr '*' Expr . ')'

    ')'  shift, and go to state 84


State 72

   31 Expr: '(' Expr '/' Expr . ')'

    ')'  shift, and go to state 85


State 73

   32 Expr: '(' Expr '%' Expr . ')'

    ')'  shift, and go to state 86


State 74

   26 Cond: '(' Cond OR Cond ')' .

    $default  reduce using rule 26 (Cond)


State 75

   25 Cond: '(' Cond AND Cond ')' .

    $default  reduce using rule 25 (Cond)


State 76

   23 Cond: '(' Expr LE Expr ')' .

    $default  reduce using rule 23 (Cond)


State 77

   24 Cond: '(' Expr GE Expr ')' .

    $default  reduce using rule 24 (Cond)


State 78

   19 Cond: '(' Expr EQUALS Expr ')' .

    $default  reduce using rule 19 (Cond)


State 79

   20 Cond: '(' Expr NE Expr ')' .

    $default  reduce using rule 20 (Cond)


State 80

   21 Cond: '(' Expr '<' Expr ')' .

    $default  reduce using rule 21 (Cond)


State 81

   22 Cond: '(' Expr '>' Expr ')' .

    $default  reduce using rule 22 (Cond)


State 82

   28 Expr: '(' Expr '+' Expr ')' .

    $default  reduce using rule 28 (Expr)


State 83

   29 Expr: '(' Expr '-' Expr ')' .

    $default  reduce using rule 29 (Expr)


State 84

   30 Expr: '(' Expr '*' Expr ')' .

    $default  reduce using rule 30 (Expr)


State 85

   31 Expr: '(' Expr '/' Expr ')' .

    $default  reduce using rule 31 (Expr)


State 86

   32 Expr: '(' Expr '%' Expr ')' .

    $default  reduce using rule 32 (Expr)
